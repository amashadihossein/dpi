[{"path":"https://amashadihossein.github.io/dpi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Afshin Mashadi-Hossein Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"dpi","text":"package aims provide minimalist uniform interface retrieving data products associated metadata matter data product housed. Currently, s3, local, LabKey three types remote repositories housing data products. Note: LabKey functionality temporarily deprecated. packages leverages pins package accessing data. , leverage concept boards organizing data data spaces. example, team working multiple clinical studies, may consider defining data space board study, defined governance policy. example, board dissimilar idea directory folder. board can instantiated different data platforms (e.g. AWS s3) supported pins extensions. different data platforms (e.g. s3 vs. LabKey) specific url ways authentication, different parameters need set connection remote data repository established. connection established, however, interactions (e.g. list, get, version, etc.) done using set functions. mind, steps outlined divided Setting connection Interacting data product","code":""},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"set-up-connection","dir":"Articles","previous_headings":"","what":"Set up connection","title":"dpi","text":"Setting connection data products involves setting Board parameters: parameters relating remote location data product Credential parameters: parameters checked remote location data trying access NOTE: prior proceeding verify working credentials repository need access.","code":""},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"board-parameters","dir":"Articles","previous_headings":"Set up connection","what":"Board parameters","title":"dpi","text":"s3, need know bucket name region. LabKey, need know url platform specific folder. local boards, need provide path local folder","code":""},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"format-board-parameters","dir":"Articles","previous_headings":"Set up connection","what":"Format board parameters","title":"dpi","text":"S3, need provide s3 bucket name region local, need provide absolute folder path","code":"board_params <- board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"us-east-1\" ) board_params <- board_params_set_local(   folder = \"/project_folder/subfolder\" )"},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"format-your-credentials","dir":"Articles","previous_headings":"Set up connection","what":"Format your credentials","title":"dpi","text":"can done cred_set_aws cred_set_labkey functions. cred_set function signatures informs type parameters needed. NOTE: security reasons, avoid putting credentials inside script. highly recommended establish habit using environment variables conjunction secret management packages like keyring. , exemplifies pattern, env variables set using Sys.setenv(\"AWS_KEY\" = \"xxxx\") console, using keyring, Sys.setenv(\"AWS_KEY\" = keyring::key_get(service = \"AWS_KEY\"). Similarly, “AWS_SECRET” can set environment variable. signature creds AWS s3 takes two parameters.","code":"aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") )"},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"connect-and-interact-with-data-product","dir":"Articles","previous_headings":"","what":"Connect and interact with data product","title":"dpi","text":"connection parameters established, interaction data product use set function format matter data housed.","code":""},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"connect-to-the-board","dir":"Articles","previous_headings":"Connect and interact with data product","what":"Connect to the board","title":"dpi","text":"can connect board.","code":"board_object <- dp_connect(board_params = board_params, creds = aws_creds)"},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"work-with-the-board","dir":"Articles","previous_headings":"Connect and interact with data product","what":"Work with the board","title":"dpi","text":"List data products available board just connected . Note need pass board object order list available data products.","code":"dp_list(board_object = board_object)"},{"path":"https://amashadihossein.github.io/dpi/articles/dpi.html","id":"retrieve-data","dir":"Articles","previous_headings":"Connect and interact with data product","what":"Retrieve data","title":"dpi","text":"Load data working environment, e.g. object dp. Specifying version optional.","code":"dp <- dp_get(   board_object = board_object,   data_name = \"dp-studyid_branchid\",   version = \"c5a51c3\" )"},{"path":"https://amashadihossein.github.io/dpi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Afshin Mashadi-Hossein. Author, maintainer. Yue Jiang. Author.","code":""},{"path":"https://amashadihossein.github.io/dpi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mashadi-Hossein , Jiang Y (2023). dpi: Data Product Programming Interface. R package version 0.1.0.","code":"@Manual{,   title = {dpi: Data Product Programming Interface},   author = {Afshin Mashadi-Hossein and Yue Jiang},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"https://amashadihossein.github.io/dpi/index.html","id":"dpi","dir":"","previous_headings":"","what":"Data Product Programming Interface","title":"Data Product Programming Interface","text":"goal dpi provide programmatic interface data products built within Data---Product framework","code":""},{"path":"https://amashadihossein.github.io/dpi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Product Programming Interface","text":"released version dev version","code":"remotes::install_github(\"amashadihossein/dpi\") remotes::install_github(\"amashadihossein/dpi\", ref = \"dev\")"},{"path":"https://amashadihossein.github.io/dpi/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Data Product Programming Interface","text":"","code":"library(dpi)  # Add your AWS profile name. If you don't have a named profile, you can provide your AWS credentials aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") )  # Get the list of board parameters board_params <- board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"specific_region\" # e.g. \"us-east-1\" )  # Connect to the board board_object <- dp_connect(board_params = board_params, creds = aws_creds)  # List what's available on the board dp_list(board_object = board_object)  # Retrieve the latest data. Alternatively retrieve specific version by passing # the version id to dp_get dp_get(   board_object = board_object,   data_name = \"dp-studyid_branchid\",   version = \"specific_version\" # e.g. \"c5a51c3\" )"},{"path":"https://amashadihossein.github.io/dpi/index.html","id":"related-documentation","dir":"","previous_headings":"","what":"Related documentation","title":"Data Product Programming Interface","text":"daapr: https://amashadihossein.github.io/daapr/ dpbuild: https://amashadihossein.github.io/dpbuild/ dpdeploy: https://amashadihossein.github.io/dpdeploy/","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_labkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Properly Formatted Board Parameters — board_params_set_labkey","title":"Generate Properly Formatted Board Parameters — board_params_set_labkey","text":"function simply provides consistent format board parameters","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_labkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Properly Formatted Board Parameters — board_params_set_labkey","text":"","code":"board_params_set_labkey(board_alias, url, folder = \"\")"},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_labkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Properly Formatted Board Parameters — board_params_set_labkey","text":"board_alias name board url url labkey server folder path study folder data product stored","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_labkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Properly Formatted Board Parameters — board_params_set_labkey","text":"data.frame board_params","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_labkey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Properly Formatted Board Parameters — board_params_set_labkey","text":"","code":"if (FALSE) { board_params_set_labkey(   board_alias = \"xxxx\",   folder = \"xxxx\" ) }"},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate properly formatted board parameters for local board — board_params_set_local","title":"Generate properly formatted board parameters for local board — board_params_set_local","text":"function simply provides consistent format board parameters","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate properly formatted board parameters for local board — board_params_set_local","text":"","code":"board_params_set_local(folder, board_alias = deprecated())"},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate properly formatted board parameters for local board — board_params_set_local","text":"folder path data product storage folder. NOTE: general guidance folder treated permanent location immutable content. example, data product project folder appropriate directory. board_alias argument deprecated newer pins","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate properly formatted board parameters for local board — board_params_set_local","text":"data.frame properly formatted board_params","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate properly formatted board parameters for local board — board_params_set_local","text":"","code":"if (FALSE) { board_params_set_local(folder = \"xxxx\") }"},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_s3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Properly Formatted Board Parameters — board_params_set_s3","title":"Generate Properly Formatted Board Parameters — board_params_set_s3","text":"function simply provides consistent format board parameters","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_s3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Properly Formatted Board Parameters — board_params_set_s3","text":"","code":"board_params_set_s3(bucket_name, region, board_alias = deprecated())"},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_s3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Properly Formatted Board Parameters — board_params_set_s3","text":"bucket_name name s3 bucket region AWS region s3 bucket e.g. \"us-east-1\" \"us-west-1\" board_alias argument deprecated newer pins","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_s3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Properly Formatted Board Parameters — board_params_set_s3","text":"data.frame properly formatted board_params","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/board_params_set_s3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Properly Formatted Board Parameters — board_params_set_s3","text":"","code":"if (FALSE) { board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"us-east-1\" ) }"},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_aws.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Properly Formatted AWS Credentials — creds_set_aws","title":"Generate Properly Formatted AWS Credentials — creds_set_aws","text":"function simply provides consistent format aws credentials. Additionally, ensures minimum requirement either named profile set AWS (key, secret) provided. Note named profile provided key secret ignored.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_aws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Properly Formatted AWS Credentials — creds_set_aws","text":"","code":"creds_set_aws(   profile_name = character(0),   key = character(0),   secret = character(0) )"},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_aws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Properly Formatted AWS Credentials — creds_set_aws","text":"profile_name AWS named profile bucket housing data product. name associated credential within .aws/credentials (See AWS CLI configuring named profiles). key aws key associated access bucket housing data product secret aws secret associated access bucket housing data product","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_aws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Properly Formatted AWS Credentials — creds_set_aws","text":"data.frame containing properly formatted AWS credentials","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_aws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Properly Formatted AWS Credentials — creds_set_aws","text":"","code":"if (FALSE) { aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") ) }"},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_labkey.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Labkey Credentials — creds_set_labkey","title":"Generate Labkey Credentials — creds_set_labkey","text":"Get credentials LabKey board","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_labkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Labkey Credentials — creds_set_labkey","text":"","code":"creds_set_labkey(api_key)"},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_labkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Labkey Credentials — creds_set_labkey","text":"api_key Labkey API key user","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_labkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Labkey Credentials — creds_set_labkey","text":"labkey_creds","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/creds_set_labkey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Labkey Credentials — creds_set_labkey","text":"","code":"if (FALSE) { creds_set_labkey(api_key = Sys.getenv(\"LABKEY_API_KEY\")) }"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the Data Product Board — dp_connect","title":"Connect to the Data Product Board — dp_connect","text":"Connect board housing data product. needed prior interacting content board.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the Data Product Board — dp_connect","text":"","code":"dp_connect(board_params, creds, ...)"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to the Data Product Board — dp_connect","text":"board_params use board_params_set_s3 board_params_set_local specify board parameters. contains information board data product pinned. creds use creds_set_aws set . using local board, creds ignored need specified. ... parameters","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the Data Product Board — dp_connect","text":"data product object","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to the Data Product Board — dp_connect","text":"","code":"if (FALSE) { aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") ) board_params <- board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"us-east-1\" ) board_object <- dp_connect(board_params, aws_creds) }"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Data Object — dp_get","title":"Get the Data Object — dp_get","text":"Load working environment data product object","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Data Object — dp_get","text":"","code":"dp_get(board_object, data_name, version = NULL)"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Data Object — dp_get","text":"board_object board object dp_connect data_name name data product board, .e. dp-cars-us001. get list available data products, use dp_list version data version retrieve. specified, retrieve latest version. Use dp_list see available versions.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Data Object — dp_get","text":"data product object","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Data Object — dp_get","text":"","code":"if (FALSE) { aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") ) board_params <- board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"us-east-1\" ) board_object <- dp_connect(board_params, aws_creds) dp <- dp_get(board_object, data_name = \"data-name\") }"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Data Products on a Board — dp_list","title":"List Data Products on a Board — dp_list","text":"List data products named board connected . requires connection via dp_connect first.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Data Products on a Board — dp_list","text":"","code":"dp_list(board_object)"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Data Products on a Board — dp_list","text":"board_object board object dp_connect","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Data Products on a Board — dp_list","text":"tibble containing metadata versions data products board","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Data Products on a Board — dp_list","text":"","code":"if (FALSE) { aws_creds <- creds_set_aws(   key = Sys.getenv(\"AWS_KEY\"),   secret = Sys.getenv(\"AWS_SECRET\") ) board_params <- board_params_set_s3(   bucket_name = \"bucket_name\",   region = \"us-east-1\" ) board_object <- dp_connect(board_params, aws_creds) dp_list(board_object) }"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_make_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dp params to connect to the Data Product Board — dp_make_params","title":"Make dp params to connect to the Data Product Board — dp_make_params","text":"Make dp params connect Data Product Board. needed prior interacting content board.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_make_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dp params to connect to the Data Product Board — dp_make_params","text":"","code":"dp_make_params(   github_repo_url,   repo_token = Sys.getenv(\"GITHUB_PAT\"),   branch_name = NULL )"},{"path":"https://amashadihossein.github.io/dpi/reference/dp_make_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dp params to connect to the Data Product Board — dp_make_params","text":"github_repo_url Repository URL repo_token Personal Access Token (PAT) needed access contents private repository branch_name Branch name data product repository","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_make_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dp params to connect to the Data Product Board — dp_make_params","text":"Named list dp params","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/dp_make_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make dp params to connect to the Data Product Board — dp_make_params","text":"","code":"if (FALSE) { github_repo_url <- \"https://github.com/<USERNAME>/<REPOSITORY NAME>\" dp_params <- dp_make_params(github_repo_url = github_repo_url, repo_token = Sys.getenv(\"GITHUB_PAT\")) }"},{"path":"https://amashadihossein.github.io/dpi/reference/dpi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dpi: Data Product Programming Interface — dpi-package","title":"dpi: Data Product Programming Interface — dpi-package","text":"package provides interface data product.","code":""},{"path":[]},{"path":"https://amashadihossein.github.io/dpi/reference/dpi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dpi: Data Product Programming Interface — dpi-package","text":"Maintainer: Afshin Mashadi-Hossein amashadihossein@gmail.com Authors: Yue Jiang rivehill@gmail.com","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/fn_hydrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Hydrate a dried called function — fn_hydrate","title":"Hydrate a dried called function — fn_hydrate","text":"execute returns value function call given textual (dried) representation","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/fn_hydrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hydrate a dried called function — fn_hydrate","text":"","code":"fn_hydrate(dried_fn)"},{"path":"https://amashadihossein.github.io/dpi/reference/fn_hydrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hydrate a dried called function — fn_hydrate","text":"fn_called function called","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/fn_hydrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hydrate a dried called function — fn_hydrate","text":"value called function given textual representation","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/fn_hydrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hydrate a dried called function — fn_hydrate","text":"","code":"if (FALSE) { fn_hydrate(fn_dry(sum(log(1:10)))) }"},{"path":"https://amashadihossein.github.io/dpi/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://amashadihossein.github.io/dpi/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":[]},{"path":"https://amashadihossein.github.io/dpi/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"dpi 0.1.0","text":"dpbuild now requires pins >= v1.2.0. means data products now use v1 api older data products incompatible dpbuild >= 0.1.0. Quite changes hood, users see minimal changes workflow. LabKey functionality temporarily removed pins v1 can extended support LabKey boards data products now retrieved pin hash, rather version. Since pins v1 pin version included hash datetime stamp, dp_get retrieves data products using hash .","code":""},{"path":"https://amashadihossein.github.io/dpi/news/index.html","id":"other-improvments-0-1-0","dir":"Changelog","previous_headings":"","what":"Other improvments","title":"dpi 0.1.0","text":"Added NEWS.md file track changes package. board_params_set_s3 longer requires board_alias dp_connect returns board object can passed dp_get, dp_list dpconnect_check removed streamline workflow","code":""}]
